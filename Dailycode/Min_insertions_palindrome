Minimum insertions to form a palindrome
This problem was asked by Quora.

Given a string, find the palindrome that can be made by inserting the fewest number of characters as possible anywhere in the word. If there is more than one palindrome of minimum length that can be made, return the lexicographically earliest one (the first one alphabetically).

int findMinInsertions(char str[], int l, int r){
    if(l>r) return INT_MAX;
    if(l == r-1) return str[l] == str[r] ? 0:1;
    if(l == r) return 0;
    return str[l] == str[r] ? findMinInsertions(str, l+1, r-1): min(findMinInsertions(str, l+1, r), findMinInsertions(str, l, r-1))+1; 
}
